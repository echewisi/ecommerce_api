{
    "swagger": "2.0",
    "info": {
      "title": "E-Commerce API",
      "description": "This is a RESTful API for managing an e-commerce application.",
      "version": "1.0.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "schemes": ["http"],
    "paths": {
      "/register": {
        "post": {
          "summary": "Register a new user",
          "description": "Create a new user account",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" },
                  "is_admin": { "type": "boolean" }
                },
                "required": ["email", "password"]
              }
            }
          ],
          "responses": {
            "201": { "description": "User registered successfully" },
            "400": { "description": "Bad request" },
            "409": { "description": "Email already exists" }
          }
        }
      },
      "/login": {
        "post": {
          "summary": "User login",
          "description": "Authenticate a user and issue a JWT",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          ],
          "responses": {
            "200": { "description": "Login successful" },
            "400": { "description": "Bad request" },
            "401": { "description": "Invalid credentials" }
          }
        }
      },
      "/orders": {
        "post": {
          "summary": "Place an order",
          "description": "Authenticated users can place an order.",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "product_id": { "type": "integer" },
                        "quantity": { "type": "integer" }
                      },
                      "required": ["product_id", "quantity"]
                    }
                  }
                },
                "required": ["items"]
              }
            }
          ],
          "responses": {
            "201": { "description": "Order placed successfully" },
            "400": { "description": "Bad request" },
            "500": { "description": "Internal server error" }
          }
        },
        "get": {
          "summary": "Get user orders",
          "description": "Retrieve all orders for the authenticated user.",
          "responses": {
            "200": { "description": "Orders retrieved successfully" },
            "401": { "description": "Unauthorized" }
          }
        }
      },
      "/orders/{id}/cancel": {
        "put": {
          "summary": "Cancel an order",
          "description": "Cancel an order if its status is 'Pending'.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer",
              "description": "Order ID"
            }
          ],
          "responses": {
            "200": { "description": "Order canceled successfully" },
            "400": { "description": "Invalid request" },
            "401": { "description": "Unauthorized" }
          }
        }
      },
      "/admin/products": {
        "post": {
          "summary": "Create a new product",
          "description": "Admins can create new products.",
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "price": { "type": "number" },
                  "stock": { "type": "integer" }
                },
                "required": ["name", "price", "stock"]
              }
            }
          ],
          "responses": {
            "201": { "description": "Product created successfully" },
            "400": { "description": "Bad request" },
            "401": { "description": "Unauthorized" },
            "403": { "description": "Admin access required" }
          }
        },
        "get": {
          "summary": "Get all products",
          "description": "Retrieve all products in the system.",
          "responses": {
            "200": { "description": "Products retrieved successfully" },
            "500": { "description": "Internal server error" }
          }
        }
      },
      "/admin/products/{id}": {
        "put": {
          "summary": "Update a product",
          "description": "Admins can update product details.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer",
              "description": "Product ID"
            },
            {
              "in": "body",
              "name": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "description": { "type": "string" },
                  "price": { "type": "number" },
                  "stock": { "type": "integer" }
                }
              }
            }
          ],
          "responses": {
            "200": { "description": "Product updated successfully" },
            "400": { "description": "Bad request" },
            "401": { "description": "Unauthorized" },
            "403": { "description": "Admin access required" }
          }
        },
        "delete": {
          "summary": "Delete a product",
          "description": "Admins can delete a product.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "integer",
              "description": "Product ID"
            }
          ],
          "responses": {
            "200": { "description": "Product deleted successfully" },
            "400": { "description": "Invalid request" },
            "401": { "description": "Unauthorized" },
            "403": { "description": "Admin access required" }
          }
        }
      }
    }
  }
  